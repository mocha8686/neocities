---
import Section from '$/components/Section.astro';
import FavoriteMath from '$/components/FavoriteMath.astro';
import type { HTMLTag } from 'astro/types';
import type { AstroComponentFactory } from 'astro/runtime/server/index.js';
import getLatestReview from '$/lib/getLatestReview';

const { class: className, ...rest } = Astro.props;

let Element: HTMLTag | AstroComponentFactory = 'p';
let props: Record<string, unknown> = { 'set:text': "Didn't find anything..." };

const latestReview = await getLatestReview();

if (latestReview) {
	const { title, pubDate, updatedDate } = latestReview.data;

	switch (latestReview.data.thing.type) {
		case 'math': {
			const { expression } = latestReview.data.thing;
			Element = FavoriteMath;
			props = { title, date: updatedDate ?? pubDate, expression };
			break;
		}
	}
}
---

<Section header="Hyperfixed" class:list={[className, 'favorite']} {...rest}>
	<Element {...props} />
	{
		latestReview && (
			<a href={`/reviews/${latestReview.id}`}>Read the review</a>
		)
	}
</Section>

<style>
	.favorite {
		display: flex;
		flex-direction: column;
	}

	a {
		place-self: end;
	}

	a::after {
		content: ' >>';
	}
</style>
