---
import '$/styles/crt.css';
import type { HTMLTag, Polymorphic } from 'astro/types';

interface ComponentProps {
	disableHeader?: boolean;
}

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & ComponentProps;

const {
	disableHeader = false,
	as: Tag = 'section',
	class: className,
	...rest
} = Astro.props;
---

<script>
	import { effectsSettings, toggleClass } from '$/lib/effectsSettings';

	const sections = document.querySelectorAll('.section');
	effectsSettings.subscribe(settings => {
		toggleClass(
			settings['CRT chromatic abberation'],
			sections,
			'disable-crt-color-shear',
		);
		toggleClass(settings['CRT flicker'], sections, 'disable-crt-flicker');
	});
</script>

<Tag
	class:list={[
		className,
		'section',
		'crt',
		'disable-crt-flicker',
		'disable-crt-color-shear',
		{ 'disable-header': disableHeader },
	]}
	{...rest}
>
	<slot />
</Tag>

<style>
	:where(.section) {
		position: relative;

		margin: 1rem;
		padding: 0.5rem 1rem;
		border: var(--bd-section);

		background: color-mix(
			in srgb-linear,
			transparent,
			var(--cl-accent) 15%
		);
	}

	.section:not(.disable-header):global(
			:has(> :where(h1, h2, h3, h4, h5, h6):first-child)
		) {
		margin-block-start: 3rem;
	}

	.section:not(.disable-header)
		> :global(:where(h1, h2, h3, h4, h5, h6):first-child) {
		position: absolute;
		inset-block-start: 0;
		inset-inline-end: 0;
		translate: 0 -100%;

		margin-block: 0;
	}
</style>